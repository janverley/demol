<Application x:Class="DeMol.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:local="clr-namespace:DeMol">
    <Application.Resources>
        <ResourceDictionary>

            <local:BooleanToVisibilityConverter x:Key="showWhenDisabled" True="Collapsed" False="Visible" />

            <SolidColorBrush x:Key="90p" Color="#50FFFFFF" />
            <SolidColorBrush x:Key="95p" Color="#95FFFFFF" />

            <Style TargetType="Button" x:Key="imgButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid Margin="5">
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.LayoutTransform>
                                        <ScaleTransform ScaleX="0.4" ScaleY="0.4" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                                <Ellipse Fill="#75FFFFFF"
                                         Visibility="{TemplateBinding IsEnabled, Converter={StaticResource ResourceKey=showWhenDisabled}}" />
                                <!--<Border Visibility="{TemplateBinding IsEnabled, Converter={StaticResource ResourceKey=showWhenDisabled}}" Background="#45FFFFFF"/>-->
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBlock}" x:Key="H1">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Margin" Value="0 0 5 0" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="H2" BasedOn="{StaticResource H1}">
                <Setter Property="FontSize" Value="100" />
            </Style>
            <Style TargetType="{x:Type CheckBox}" x:Key="C1">
                <Setter Property="FontSize" Value="100" />
            </Style>
            <Style TargetType="{x:Type RadioButton}" x:Key="R1">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <Grid>
                                <Border x:Name="Border" BorderBrush="{TemplateBinding Foreground}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type RadioButton}" x:Key="R2" BasedOn="{StaticResource R1}">
                <Setter Property="HorizontalAlignment" Value="Left" />
            </Style>

            <Style TargetType="{x:Type TextBox}" x:Key="B1">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Background" Value="{StaticResource 90p}" />
                <Setter Property="TextAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}" x:Key="H1p">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Background" Value="{StaticResource 90p}" />
                <Setter Property="PasswordChar" Value="X" />
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="Btn1">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="25" />
                <Setter Property="Background" Value="{StaticResource 90p}" />
                <Setter Property="Margin" Value="0 0 5 5" />
                <Setter Property="Padding" Value="10 0" />
                <Setter Property="MinWidth" Value="80" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="Border" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="{StaticResource 95p}" />
                                </Trigger>
                                <Trigger Property="Button.IsPressed" Value="true">
                                    <Setter Property="Background" Value="White" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />

            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="Themes/MetroDark/MetroDark.MSControls.Core.Implicit.xaml" />
                <ResourceDictionary Source="Themes/MetroDark/MetroDark.MSControls.Toolkit.Implicit.xaml" />
                <ResourceDictionary>
                    <local:Bootstrapper x:Key="Bootstrapper" />
                    <SolidColorBrush x:Key="BackgroundBrush" Color="#FF225378" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>